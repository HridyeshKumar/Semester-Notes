Unit-1

#Experiment1
#Mathematical Functions 
# Develop the R program for Basic Mathematical computation -Square, Square root, exponential etc.
var1<-7
#Square
var1_square1=var1^2
print(var1_square1)
var1_square2=var1**2
print(var1_square2)
#Square Root
var1_sqrt=sqrt(var1)
print(var1_sqrt)
#Exponential
var1_exp=exp(var1)
print(var1_exp)

Output
  #Experiment1
> #Mathematical Functions 
> # Develop the R program for Basic Mathematical computation - Square, Square root, exponential etc.
> var1<-7
> #Square
> var1_square1=var1^2
> print(var1_square1)
[1] 49
> var1_square2=var1**2
> print(var1_square2)
[1] 49
> #Square Root
> var1_sqrt=sqrt(var1)
> print(var1_sqrt)
[1] 2.645751
> #Exponential
> var1_exp=exp(var1)
> print(var1_exp)
[1] 1096.633
> 

#Experiment2
#Create an object X that stores the value then overwrite the object in by itself divided by Y. Print the result to the console.
x=23
print(x)
y=10
x=x/y
print(x)

Output
  #Experiment2
> #Create an object X that stores the value then overwrite the object in by itself divided by Y. Print the result to the console.
> x=23
> print(x)
[1] 23
> y=10
> x=x/y
> print(x)
[1] 2.3
> 

#Experiment3
#Create and store a sequence of values from x to y that progresses in steps of 0.3
x=10
y=15.9
v1=seq(x,y,by=0.3)
print(v1)

Output
  #Experiment3
> #Create and store a sequence of values from x to y that progresses in steps of 0.3
> x=10
> y=15.9
> v1=seq(x,y,by=0.3)
> print(v1)
 [1] 10.0 10.3 10.6 10.9 11.2 11.5 11.8 12.1 12.4 12.7
[11] 13.0 13.3 13.6 13.9 14.2 14.5 14.8 15.1 15.4 15.7
> 

#Experiment4
#Overwrite the existing object using the same sequence with the order reversed.
x=10
y=15.9
v1=seq(x,y,by=0.3)
print(v1)
#Method 1
v1=sort(v1,decreasing=TRUE)
print(v1)
#Method 2
v1=seq(x,y,by=0.3)
v1=rev(v1)
print(v1)
#Method 3
x=10
y=15.7
v1=seq(y,x,by=-0.3)
print(v1)

Output
 #Experiment4
> #Overwrite the existing object using the same sequence with the order reversed.
> x=10
> y=15.9
> v1=seq(x,y,by=0.3)
> print(v1)
 [1] 10.0 10.3 10.6 10.9 11.2 11.5 11.8 12.1 12.4 12.7 13.0 13.3 13.6 13.9
[15] 14.2 14.5 14.8 15.1 15.4 15.7
> #Method 1
> v1=sort(v1,decreasing=TRUE)
> print(v1)
 [1] 15.7 15.4 15.1 14.8 14.5 14.2 13.9 13.6 13.3 13.0 12.7 12.4 12.1 11.8
[15] 11.5 11.2 10.9 10.6 10.3 10.0
> #Method 2
> v1=seq(x,y,by=0.3)
> v1=rev(v1)
> print(v1)
 [1] 15.7 15.4 15.1 14.8 14.5 14.2 13.9 13.6 13.3 13.0 12.7 12.4 12.1 11.8
[15] 11.5 11.2 10.9 10.6 10.3 10.0
> #Method 3
> x=10
> y=15.7
> v1=seq(y,x,by=-0.3)
> print(v1)
 [1] 15.7 15.4 15.1 14.8 14.5 14.2 13.9 13.6 13.3 13.0 12.7 12.4 12.1 11.8
[15] 11.5 11.2 10.9 10.6 10.3 10.0
> 

#Experiment5
#Confirm that the length of the vector created is 20.
x=10
y=15.9
v1=seq(x,y,by=0.3)
print(length(v1))

Output
  #Experiment5
> #Confirm that the length of the vector created is 20.
> x=10
> y=15.9
> v1=seq(x,y,by=0.3)
> print(length(v1))
[1] 20

#Experiment 6
#Extract the first and last elements of already created vector from, storing them as a new object. 
x=10
y=15.9
v1=seq(x,y,by=0.3)
print(v1)
First_ele=v1[1]
Last_ele=v1[length(v1)]
print(First_ele)
print(Last_ele)
  
  Output    
 #Experiment 6
> #Extract the first and last elements of already created vector from, storing them as a new object. 
> x=10
> y=15.9
> v1=seq(x,y,by=0.3)
> print(v1)
 [1] 10.0 10.3 10.6 10.9 11.2 11.5 11.8 12.1 12.4 12.7
[11] 13.0 13.3 13.6 13.9 14.2 14.5 14.8 15.1 15.4 15.7
> First_ele=v1[1]
> Last_ele=v1[length(v1)]
> print(First_ele)
[1] 10
> print(Last_ele)
[1] 15.7
